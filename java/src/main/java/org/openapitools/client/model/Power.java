/*
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Power
 */

public class Power {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private Integer mode;

  public static final String SERIALIZED_NAME_MODE_NAME = "mode_name";
  @SerializedName(SERIALIZED_NAME_MODE_NAME)
  private String modeName;

  public static final String SERIALIZED_NAME_SUPPLY = "supply";
  @SerializedName(SERIALIZED_NAME_SUPPLY)
  private Integer supply;

  public static final String SERIALIZED_NAME_SUPPLY_NAME = "supply_name";
  @SerializedName(SERIALIZED_NAME_SUPPLY_NAME)
  private String supplyName;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private Integer source;

  public static final String SERIALIZED_NAME_SOURCE_NAME = "source_name";
  @SerializedName(SERIALIZED_NAME_SOURCE_NAME)
  private String sourceName;

  public static final String SERIALIZED_NAME_TECH_SCALING = "tech_scaling";
  @SerializedName(SERIALIZED_NAME_TECH_SCALING)
  private Boolean techScaling;

  public static final String SERIALIZED_NAME_CONFIDENCE = "confidence";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE)
  private BigDecimal confidence;

  /**
   * Gets or Sets powerType
   */
  @JsonAdapter(PowerTypeEnum.Adapter.class)
  public enum PowerTypeEnum {
    EQUATION("equation"),
    
    TABLE("table"),
    
    WAVEFORM("waveform");

    private String value;

    PowerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PowerTypeEnum fromValue(String value) {
      for (PowerTypeEnum b : PowerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PowerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PowerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PowerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PowerTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_POWER_TYPE = "power_type";
  @SerializedName(SERIALIZED_NAME_POWER_TYPE)
  private PowerTypeEnum powerType;

  public static final String SERIALIZED_NAME_EQUATION = "equation";
  @SerializedName(SERIALIZED_NAME_EQUATION)
  private Object equation;

  public static final String SERIALIZED_NAME_TABLE_COLUMNS = "table_columns";
  @SerializedName(SERIALIZED_NAME_TABLE_COLUMNS)
  private Object tableColumns;

  public static final String SERIALIZED_NAME_TABLE = "table";
  @SerializedName(SERIALIZED_NAME_TABLE)
  private Object table;

  public static final String SERIALIZED_NAME_WAVEFORM = "waveform";
  @SerializedName(SERIALIZED_NAME_WAVEFORM)
  private Object waveform;

  public static final String SERIALIZED_NAME_WAVEFORM_TYPE = "waveform_type";
  @SerializedName(SERIALIZED_NAME_WAVEFORM_TYPE)
  private String waveformType;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




  public Power mode(Integer mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getMode() {
    return mode;
  }


  public void setMode(Integer mode) {
    this.mode = mode;
  }


   /**
   * Get modeName
   * @return modeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModeName() {
    return modeName;
  }




  public Power supply(Integer supply) {
    
    this.supply = supply;
    return this;
  }

   /**
   * Get supply
   * @return supply
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getSupply() {
    return supply;
  }


  public void setSupply(Integer supply) {
    this.supply = supply;
  }


   /**
   * Get supplyName
   * @return supplyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupplyName() {
    return supplyName;
  }




  public Power source(Integer source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getSource() {
    return source;
  }


  public void setSource(Integer source) {
    this.source = source;
  }


   /**
   * Get sourceName
   * @return sourceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSourceName() {
    return sourceName;
  }




  public Power techScaling(Boolean techScaling) {
    
    this.techScaling = techScaling;
    return this;
  }

   /**
   * Get techScaling
   * @return techScaling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTechScaling() {
    return techScaling;
  }


  public void setTechScaling(Boolean techScaling) {
    this.techScaling = techScaling;
  }


  public Power confidence(BigDecimal confidence) {
    
    this.confidence = confidence;
    return this;
  }

   /**
   * Get confidence
   * minimum: 0
   * maximum: 1E+2
   * @return confidence
  **/
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getConfidence() {
    return confidence;
  }


  public void setConfidence(BigDecimal confidence) {
    this.confidence = confidence;
  }


  public Power powerType(PowerTypeEnum powerType) {
    
    this.powerType = powerType;
    return this;
  }

   /**
   * Get powerType
   * @return powerType
  **/
  @ApiModelProperty(required = true, value = "")

  public PowerTypeEnum getPowerType() {
    return powerType;
  }


  public void setPowerType(PowerTypeEnum powerType) {
    this.powerType = powerType;
  }


  public Power equation(Object equation) {
    
    this.equation = equation;
    return this;
  }

   /**
   * Get equation
   * @return equation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEquation() {
    return equation;
  }


  public void setEquation(Object equation) {
    this.equation = equation;
  }


  public Power tableColumns(Object tableColumns) {
    
    this.tableColumns = tableColumns;
    return this;
  }

   /**
   * Get tableColumns
   * @return tableColumns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTableColumns() {
    return tableColumns;
  }


  public void setTableColumns(Object tableColumns) {
    this.tableColumns = tableColumns;
  }


  public Power table(Object table) {
    
    this.table = table;
    return this;
  }

   /**
   * Get table
   * @return table
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTable() {
    return table;
  }


  public void setTable(Object table) {
    this.table = table;
  }


  public Power waveform(Object waveform) {
    
    this.waveform = waveform;
    return this;
  }

   /**
   * Get waveform
   * @return waveform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getWaveform() {
    return waveform;
  }


  public void setWaveform(Object waveform) {
    this.waveform = waveform;
  }


  public Power waveformType(String waveformType) {
    
    this.waveformType = waveformType;
    return this;
  }

   /**
   * Get waveformType
   * @return waveformType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWaveformType() {
    return waveformType;
  }


  public void setWaveformType(String waveformType) {
    this.waveformType = waveformType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Power power = (Power) o;
    return Objects.equals(this.id, power.id) &&
        Objects.equals(this.mode, power.mode) &&
        Objects.equals(this.modeName, power.modeName) &&
        Objects.equals(this.supply, power.supply) &&
        Objects.equals(this.supplyName, power.supplyName) &&
        Objects.equals(this.source, power.source) &&
        Objects.equals(this.sourceName, power.sourceName) &&
        Objects.equals(this.techScaling, power.techScaling) &&
        Objects.equals(this.confidence, power.confidence) &&
        Objects.equals(this.powerType, power.powerType) &&
        Objects.equals(this.equation, power.equation) &&
        Objects.equals(this.tableColumns, power.tableColumns) &&
        Objects.equals(this.table, power.table) &&
        Objects.equals(this.waveform, power.waveform) &&
        Objects.equals(this.waveformType, power.waveformType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, mode, modeName, supply, supplyName, source, sourceName, techScaling, confidence, powerType, equation, tableColumns, table, waveform, waveformType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Power {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    modeName: ").append(toIndentedString(modeName)).append("\n");
    sb.append("    supply: ").append(toIndentedString(supply)).append("\n");
    sb.append("    supplyName: ").append(toIndentedString(supplyName)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    techScaling: ").append(toIndentedString(techScaling)).append("\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    powerType: ").append(toIndentedString(powerType)).append("\n");
    sb.append("    equation: ").append(toIndentedString(equation)).append("\n");
    sb.append("    tableColumns: ").append(toIndentedString(tableColumns)).append("\n");
    sb.append("    table: ").append(toIndentedString(table)).append("\n");
    sb.append("    waveform: ").append(toIndentedString(waveform)).append("\n");
    sb.append("    waveformType: ").append(toIndentedString(waveformType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


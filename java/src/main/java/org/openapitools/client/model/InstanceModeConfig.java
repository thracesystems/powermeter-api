/*
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InstanceModeConfig
 */

public class InstanceModeConfig {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_PARAMETER = "parameter";
  @SerializedName(SERIALIZED_NAME_PARAMETER)
  private Integer parameter;

  public static final String SERIALIZED_NAME_PARAMETER_NAME = "parameter_name";
  @SerializedName(SERIALIZED_NAME_PARAMETER_NAME)
  private String parameterName;

  public static final String SERIALIZED_NAME_PARAMETER_DESCR = "parameter_descr";
  @SerializedName(SERIALIZED_NAME_PARAMETER_DESCR)
  private String parameterDescr;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




  public InstanceModeConfig parameter(Integer parameter) {
    
    this.parameter = parameter;
    return this;
  }

   /**
   * Get parameter
   * @return parameter
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getParameter() {
    return parameter;
  }


  public void setParameter(Integer parameter) {
    this.parameter = parameter;
  }


   /**
   * Get parameterName
   * @return parameterName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParameterName() {
    return parameterName;
  }




   /**
   * Get parameterDescr
   * @return parameterDescr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParameterDescr() {
    return parameterDescr;
  }




  public InstanceModeConfig value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(required = true, value = "")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceModeConfig instanceModeConfig = (InstanceModeConfig) o;
    return Objects.equals(this.id, instanceModeConfig.id) &&
        Objects.equals(this.parameter, instanceModeConfig.parameter) &&
        Objects.equals(this.parameterName, instanceModeConfig.parameterName) &&
        Objects.equals(this.parameterDescr, instanceModeConfig.parameterDescr) &&
        Objects.equals(this.value, instanceModeConfig.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parameter, parameterName, parameterDescr, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceModeConfig {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    parameterName: ").append(toIndentedString(parameterName)).append("\n");
    sb.append("    parameterDescr: ").append(toIndentedString(parameterDescr)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


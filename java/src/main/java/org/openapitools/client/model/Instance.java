/*
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InstanceMode;
import org.openapitools.client.model.InstanceSupply;

/**
 * Instance
 */

public class Instance {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private String count;

  public static final String SERIALIZED_NAME_ORIGIN_X = "origin_x";
  @SerializedName(SERIALIZED_NAME_ORIGIN_X)
  private BigDecimal originX;

  public static final String SERIALIZED_NAME_ORIGIN_Y = "origin_y";
  @SerializedName(SERIALIZED_NAME_ORIGIN_Y)
  private BigDecimal originY;

  /**
   * Gets or Sets orientation
   */
  @JsonAdapter(OrientationEnum.Adapter.class)
  public enum OrientationEnum {
    N("N"),
    
    E("E"),
    
    W("W"),
    
    S("S"),
    
    FN("FN"),
    
    FS("FS"),
    
    FE("FE"),
    
    FW("FW");

    private String value;

    OrientationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrientationEnum fromValue(String value) {
      for (OrientationEnum b : OrientationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OrientationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrientationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrientationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrientationEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ORIENTATION = "orientation";
  @SerializedName(SERIALIZED_NAME_ORIENTATION)
  private OrientationEnum orientation;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_COMPUTED_COLOR = "computed_color";
  @SerializedName(SERIALIZED_NAME_COMPUTED_COLOR)
  private String computedColor;

  public static final String SERIALIZED_NAME_MASTER = "master";
  @SerializedName(SERIALIZED_NAME_MASTER)
  private Integer master;

  public static final String SERIALIZED_NAME_MASTER_NAME = "master_name";
  @SerializedName(SERIALIZED_NAME_MASTER_NAME)
  private String masterName;

  public static final String SERIALIZED_NAME_MASTER_MASTER = "master_master";
  @SerializedName(SERIALIZED_NAME_MASTER_MASTER)
  private Integer masterMaster;

  public static final String SERIALIZED_NAME_MASTER_LATEST_COMMIT = "master_latest_commit";
  @SerializedName(SERIALIZED_NAME_MASTER_LATEST_COMMIT)
  private Integer masterLatestCommit;

  public static final String SERIALIZED_NAME_RENAME_ON_CONFLICT = "rename_on_conflict";
  @SerializedName(SERIALIZED_NAME_RENAME_ON_CONFLICT)
  private Boolean renameOnConflict;

  public static final String SERIALIZED_NAME_MODES = "modes";
  @SerializedName(SERIALIZED_NAME_MODES)
  private List<InstanceMode> modes = new ArrayList<InstanceMode>();

  public static final String SERIALIZED_NAME_OUTLINE = "outline";
  @SerializedName(SERIALIZED_NAME_OUTLINE)
  private String outline;

  public static final String SERIALIZED_NAME_AREA = "area";
  @SerializedName(SERIALIZED_NAME_AREA)
  private BigDecimal area;

  public static final String SERIALIZED_NAME_SUPPLIES = "supplies";
  @SerializedName(SERIALIZED_NAME_SUPPLIES)
  private List<InstanceSupply> supplies = null;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




  public Instance name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Instance count(String count) {
    
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCount() {
    return count;
  }


  public void setCount(String count) {
    this.count = count;
  }


  public Instance originX(BigDecimal originX) {
    
    this.originX = originX;
    return this;
  }

   /**
   * Get originX
   * @return originX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getOriginX() {
    return originX;
  }


  public void setOriginX(BigDecimal originX) {
    this.originX = originX;
  }


  public Instance originY(BigDecimal originY) {
    
    this.originY = originY;
    return this;
  }

   /**
   * Get originY
   * @return originY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getOriginY() {
    return originY;
  }


  public void setOriginY(BigDecimal originY) {
    this.originY = originY;
  }


  public Instance orientation(OrientationEnum orientation) {
    
    this.orientation = orientation;
    return this;
  }

   /**
   * Get orientation
   * @return orientation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OrientationEnum getOrientation() {
    return orientation;
  }


  public void setOrientation(OrientationEnum orientation) {
    this.orientation = orientation;
  }


  public Instance color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    this.color = color;
  }


   /**
   * Get computedColor
   * @return computedColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComputedColor() {
    return computedColor;
  }




  public Instance master(Integer master) {
    
    this.master = master;
    return this;
  }

   /**
   * Get master
   * @return master
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getMaster() {
    return master;
  }


  public void setMaster(Integer master) {
    this.master = master;
  }


   /**
   * Get masterName
   * @return masterName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMasterName() {
    return masterName;
  }




   /**
   * Get masterMaster
   * @return masterMaster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMasterMaster() {
    return masterMaster;
  }




   /**
   * Get masterLatestCommit
   * @return masterLatestCommit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMasterLatestCommit() {
    return masterLatestCommit;
  }




  public Instance renameOnConflict(Boolean renameOnConflict) {
    
    this.renameOnConflict = renameOnConflict;
    return this;
  }

   /**
   * Get renameOnConflict
   * @return renameOnConflict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRenameOnConflict() {
    return renameOnConflict;
  }


  public void setRenameOnConflict(Boolean renameOnConflict) {
    this.renameOnConflict = renameOnConflict;
  }


  public Instance modes(List<InstanceMode> modes) {
    
    this.modes = modes;
    return this;
  }

  public Instance addModesItem(InstanceMode modesItem) {
    this.modes.add(modesItem);
    return this;
  }

   /**
   * Get modes
   * @return modes
  **/
  @ApiModelProperty(required = true, value = "")

  public List<InstanceMode> getModes() {
    return modes;
  }


  public void setModes(List<InstanceMode> modes) {
    this.modes = modes;
  }


   /**
   * Get outline
   * @return outline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOutline() {
    return outline;
  }




   /**
   * Get area
   * @return area
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getArea() {
    return area;
  }




  public Instance supplies(List<InstanceSupply> supplies) {
    
    this.supplies = supplies;
    return this;
  }

  public Instance addSuppliesItem(InstanceSupply suppliesItem) {
    if (this.supplies == null) {
      this.supplies = new ArrayList<InstanceSupply>();
    }
    this.supplies.add(suppliesItem);
    return this;
  }

   /**
   * Get supplies
   * @return supplies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<InstanceSupply> getSupplies() {
    return supplies;
  }


  public void setSupplies(List<InstanceSupply> supplies) {
    this.supplies = supplies;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Instance instance = (Instance) o;
    return Objects.equals(this.id, instance.id) &&
        Objects.equals(this.name, instance.name) &&
        Objects.equals(this.count, instance.count) &&
        Objects.equals(this.originX, instance.originX) &&
        Objects.equals(this.originY, instance.originY) &&
        Objects.equals(this.orientation, instance.orientation) &&
        Objects.equals(this.color, instance.color) &&
        Objects.equals(this.computedColor, instance.computedColor) &&
        Objects.equals(this.master, instance.master) &&
        Objects.equals(this.masterName, instance.masterName) &&
        Objects.equals(this.masterMaster, instance.masterMaster) &&
        Objects.equals(this.masterLatestCommit, instance.masterLatestCommit) &&
        Objects.equals(this.renameOnConflict, instance.renameOnConflict) &&
        Objects.equals(this.modes, instance.modes) &&
        Objects.equals(this.outline, instance.outline) &&
        Objects.equals(this.area, instance.area) &&
        Objects.equals(this.supplies, instance.supplies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, count, originX, originY, orientation, color, computedColor, master, masterName, masterMaster, masterLatestCommit, renameOnConflict, modes, outline, area, supplies);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Instance {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    originX: ").append(toIndentedString(originX)).append("\n");
    sb.append("    originY: ").append(toIndentedString(originY)).append("\n");
    sb.append("    orientation: ").append(toIndentedString(orientation)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    computedColor: ").append(toIndentedString(computedColor)).append("\n");
    sb.append("    master: ").append(toIndentedString(master)).append("\n");
    sb.append("    masterName: ").append(toIndentedString(masterName)).append("\n");
    sb.append("    masterMaster: ").append(toIndentedString(masterMaster)).append("\n");
    sb.append("    masterLatestCommit: ").append(toIndentedString(masterLatestCommit)).append("\n");
    sb.append("    renameOnConflict: ").append(toIndentedString(renameOnConflict)).append("\n");
    sb.append("    modes: ").append(toIndentedString(modes)).append("\n");
    sb.append("    outline: ").append(toIndentedString(outline)).append("\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    supplies: ").append(toIndentedString(supplies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


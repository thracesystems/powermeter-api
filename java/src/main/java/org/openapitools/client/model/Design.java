/*
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.DesignVersion;
import org.openapitools.client.model.Point;

/**
 * Design
 */

public class Design {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MASTER = "master";
  @SerializedName(SERIALIZED_NAME_MASTER)
  private Integer master;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCR = "descr";
  @SerializedName(SERIALIZED_NAME_DESCR)
  private String descr;

  public static final String SERIALIZED_NAME_TECHNOLOGY = "technology";
  @SerializedName(SERIALIZED_NAME_TECHNOLOGY)
  private Integer technology;

  public static final String SERIALIZED_NAME_OUTLINE = "outline";
  @SerializedName(SERIALIZED_NAME_OUTLINE)
  private List<Point> outline = null;

  public static final String SERIALIZED_NAME_AREA = "area";
  @SerializedName(SERIALIZED_NAME_AREA)
  private BigDecimal area;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_EDITABLE = "editable";
  @SerializedName(SERIALIZED_NAME_EDITABLE)
  private Boolean editable;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private DesignVersion version;

  public static final String SERIALIZED_NAME_CURRENT_VERSION = "current_version";
  @SerializedName(SERIALIZED_NAME_CURRENT_VERSION)
  private Integer currentVersion;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private Integer project;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_INSTANTIATIONS = "instantiations";
  @SerializedName(SERIALIZED_NAME_INSTANTIATIONS)
  private Integer instantiations;

  public static final String SERIALIZED_NAME_DASHBOARD_ORDER = "dashboard_order";
  @SerializedName(SERIALIZED_NAME_DASHBOARD_ORDER)
  private List<Integer> dashboardOrder = null;

  public static final String SERIALIZED_NAME_FF_COUNT = "ff_count";
  @SerializedName(SERIALIZED_NAME_FF_COUNT)
  private Integer ffCount;

  public static final String SERIALIZED_NAME_LATCH_COUNT = "latch_count";
  @SerializedName(SERIALIZED_NAME_LATCH_COUNT)
  private Integer latchCount;

  public static final String SERIALIZED_NAME_STATETABLE_COUNT = "statetable_count";
  @SerializedName(SERIALIZED_NAME_STATETABLE_COUNT)
  private Integer statetableCount;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




   /**
   * Get master
   * @return master
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaster() {
    return master;
  }




   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }




   /**
   * Get descr
   * @return descr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescr() {
    return descr;
  }




   /**
   * Get technology
   * @return technology
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTechnology() {
    return technology;
  }




  public Design outline(List<Point> outline) {
    
    this.outline = outline;
    return this;
  }

  public Design addOutlineItem(Point outlineItem) {
    if (this.outline == null) {
      this.outline = new ArrayList<Point>();
    }
    this.outline.add(outlineItem);
    return this;
  }

   /**
   * Get outline
   * @return outline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Point> getOutline() {
    return outline;
  }


  public void setOutline(List<Point> outline) {
    this.outline = outline;
  }


  public Design area(BigDecimal area) {
    
    this.area = area;
    return this;
  }

   /**
   * Get area
   * @return area
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getArea() {
    return area;
  }


  public void setArea(BigDecimal area) {
    this.area = area;
  }


  public Design tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Design addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


   /**
   * Get editable
   * @return editable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEditable() {
    return editable;
  }




  public Design version(DesignVersion version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DesignVersion getVersion() {
    return version;
  }


  public void setVersion(DesignVersion version) {
    this.version = version;
  }


   /**
   * Get currentVersion
   * @return currentVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCurrentVersion() {
    return currentVersion;
  }




   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProject() {
    return project;
  }




   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Get instantiations
   * @return instantiations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInstantiations() {
    return instantiations;
  }




  public Design dashboardOrder(List<Integer> dashboardOrder) {
    
    this.dashboardOrder = dashboardOrder;
    return this;
  }

  public Design addDashboardOrderItem(Integer dashboardOrderItem) {
    if (this.dashboardOrder == null) {
      this.dashboardOrder = new ArrayList<Integer>();
    }
    this.dashboardOrder.add(dashboardOrderItem);
    return this;
  }

   /**
   * Get dashboardOrder
   * @return dashboardOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getDashboardOrder() {
    return dashboardOrder;
  }


  public void setDashboardOrder(List<Integer> dashboardOrder) {
    this.dashboardOrder = dashboardOrder;
  }


   /**
   * Get ffCount
   * @return ffCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFfCount() {
    return ffCount;
  }




   /**
   * Get latchCount
   * @return latchCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLatchCount() {
    return latchCount;
  }




   /**
   * Get statetableCount
   * @return statetableCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatetableCount() {
    return statetableCount;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Design design = (Design) o;
    return Objects.equals(this.id, design.id) &&
        Objects.equals(this.master, design.master) &&
        Objects.equals(this.name, design.name) &&
        Objects.equals(this.descr, design.descr) &&
        Objects.equals(this.technology, design.technology) &&
        Objects.equals(this.outline, design.outline) &&
        Objects.equals(this.area, design.area) &&
        Objects.equals(this.tags, design.tags) &&
        Objects.equals(this.editable, design.editable) &&
        Objects.equals(this.version, design.version) &&
        Objects.equals(this.currentVersion, design.currentVersion) &&
        Objects.equals(this.project, design.project) &&
        Objects.equals(this.uuid, design.uuid) &&
        Objects.equals(this.instantiations, design.instantiations) &&
        Objects.equals(this.dashboardOrder, design.dashboardOrder) &&
        Objects.equals(this.ffCount, design.ffCount) &&
        Objects.equals(this.latchCount, design.latchCount) &&
        Objects.equals(this.statetableCount, design.statetableCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, master, name, descr, technology, outline, area, tags, editable, version, currentVersion, project, uuid, instantiations, dashboardOrder, ffCount, latchCount, statetableCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Design {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    master: ").append(toIndentedString(master)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    descr: ").append(toIndentedString(descr)).append("\n");
    sb.append("    technology: ").append(toIndentedString(technology)).append("\n");
    sb.append("    outline: ").append(toIndentedString(outline)).append("\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    currentVersion: ").append(toIndentedString(currentVersion)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    instantiations: ").append(toIndentedString(instantiations)).append("\n");
    sb.append("    dashboardOrder: ").append(toIndentedString(dashboardOrder)).append("\n");
    sb.append("    ffCount: ").append(toIndentedString(ffCount)).append("\n");
    sb.append("    latchCount: ").append(toIndentedString(latchCount)).append("\n");
    sb.append("    statetableCount: ").append(toIndentedString(statetableCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


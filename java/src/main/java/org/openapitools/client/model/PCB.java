/*
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.PCBVersionSerialzer;

/**
 * PCB
 */

public class PCB {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_EDITABLE = "editable";
  @SerializedName(SERIALIZED_NAME_EDITABLE)
  private Boolean editable;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCR = "descr";
  @SerializedName(SERIALIZED_NAME_DESCR)
  private String descr;

  public static final String SERIALIZED_NAME_R_CONVECTION = "r_convection";
  @SerializedName(SERIALIZED_NAME_R_CONVECTION)
  private BigDecimal rConvection;

  public static final String SERIALIZED_NAME_C_CONVECTION = "c_convection";
  @SerializedName(SERIALIZED_NAME_C_CONVECTION)
  private BigDecimal cConvection;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_THICKNESS = "thickness";
  @SerializedName(SERIALIZED_NAME_THICKNESS)
  private BigDecimal thickness;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private PCBVersionSerialzer version;

  public static final String SERIALIZED_NAME_CURRENT_VERSION = "current_version";
  @SerializedName(SERIALIZED_NAME_CURRENT_VERSION)
  private Integer currentVersion;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




   /**
   * Get editable
   * @return editable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEditable() {
    return editable;
  }




   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }




   /**
   * Get descr
   * @return descr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescr() {
    return descr;
  }




  public PCB rConvection(BigDecimal rConvection) {
    
    this.rConvection = rConvection;
    return this;
  }

   /**
   * Get rConvection
   * @return rConvection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getrConvection() {
    return rConvection;
  }


  public void setrConvection(BigDecimal rConvection) {
    this.rConvection = rConvection;
  }


  public PCB cConvection(BigDecimal cConvection) {
    
    this.cConvection = cConvection;
    return this;
  }

   /**
   * Get cConvection
   * @return cConvection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getcConvection() {
    return cConvection;
  }


  public void setcConvection(BigDecimal cConvection) {
    this.cConvection = cConvection;
  }


  public PCB width(BigDecimal width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWidth() {
    return width;
  }


  public void setWidth(BigDecimal width) {
    this.width = width;
  }


  public PCB height(BigDecimal height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getHeight() {
    return height;
  }


  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public PCB thickness(BigDecimal thickness) {
    
    this.thickness = thickness;
    return this;
  }

   /**
   * Get thickness
   * @return thickness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getThickness() {
    return thickness;
  }


  public void setThickness(BigDecimal thickness) {
    this.thickness = thickness;
  }


  public PCB version(PCBVersionSerialzer version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PCBVersionSerialzer getVersion() {
    return version;
  }


  public void setVersion(PCBVersionSerialzer version) {
    this.version = version;
  }


   /**
   * Get currentVersion
   * @return currentVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCurrentVersion() {
    return currentVersion;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PCB PCB = (PCB) o;
    return Objects.equals(this.id, PCB.id) &&
        Objects.equals(this.editable, PCB.editable) &&
        Objects.equals(this.name, PCB.name) &&
        Objects.equals(this.descr, PCB.descr) &&
        Objects.equals(this.rConvection, PCB.rConvection) &&
        Objects.equals(this.cConvection, PCB.cConvection) &&
        Objects.equals(this.width, PCB.width) &&
        Objects.equals(this.height, PCB.height) &&
        Objects.equals(this.thickness, PCB.thickness) &&
        Objects.equals(this.version, PCB.version) &&
        Objects.equals(this.currentVersion, PCB.currentVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, editable, name, descr, rConvection, cConvection, width, height, thickness, version, currentVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PCB {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    descr: ").append(toIndentedString(descr)).append("\n");
    sb.append("    rConvection: ").append(toIndentedString(rConvection)).append("\n");
    sb.append("    cConvection: ").append(toIndentedString(cConvection)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    thickness: ").append(toIndentedString(thickness)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    currentVersion: ").append(toIndentedString(currentVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.SwaggerContribCurrents;
import org.openapitools.client.model.SwaggerContribVoltages;

/**
 * SwaggerContrib
 */

public class SwaggerContrib {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private Integer length;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Integer width;

  public static final String SERIALIZED_NAME_NFIN = "nfin";
  @SerializedName(SERIALIZED_NAME_NFIN)
  private Integer nfin;

  public static final String SERIALIZED_NAME_VOLTAGES = "voltages";
  @SerializedName(SERIALIZED_NAME_VOLTAGES)
  private List<SwaggerContribVoltages> voltages = new ArrayList<SwaggerContribVoltages>();

  public static final String SERIALIZED_NAME_CURRENTS = "currents";
  @SerializedName(SERIALIZED_NAME_CURRENTS)
  private List<SwaggerContribCurrents> currents = new ArrayList<SwaggerContribCurrents>();


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




  public SwaggerContrib name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SwaggerContrib length(Integer length) {
    
    this.length = length;
    return this;
  }

   /**
   * Get length
   * minimum: 0
   * maximum: 32767
   * @return length
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getLength() {
    return length;
  }


  public void setLength(Integer length) {
    this.length = length;
  }


  public SwaggerContrib width(Integer width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * minimum: 0
   * maximum: 32767
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWidth() {
    return width;
  }


  public void setWidth(Integer width) {
    this.width = width;
  }


  public SwaggerContrib nfin(Integer nfin) {
    
    this.nfin = nfin;
    return this;
  }

   /**
   * Get nfin
   * minimum: 0
   * maximum: 32767
   * @return nfin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNfin() {
    return nfin;
  }


  public void setNfin(Integer nfin) {
    this.nfin = nfin;
  }


  public SwaggerContrib voltages(List<SwaggerContribVoltages> voltages) {
    
    this.voltages = voltages;
    return this;
  }

  public SwaggerContrib addVoltagesItem(SwaggerContribVoltages voltagesItem) {
    this.voltages.add(voltagesItem);
    return this;
  }

   /**
   * Get voltages
   * @return voltages
  **/
  @ApiModelProperty(required = true, value = "")

  public List<SwaggerContribVoltages> getVoltages() {
    return voltages;
  }


  public void setVoltages(List<SwaggerContribVoltages> voltages) {
    this.voltages = voltages;
  }


  public SwaggerContrib currents(List<SwaggerContribCurrents> currents) {
    
    this.currents = currents;
    return this;
  }

  public SwaggerContrib addCurrentsItem(SwaggerContribCurrents currentsItem) {
    this.currents.add(currentsItem);
    return this;
  }

   /**
   * Get currents
   * @return currents
  **/
  @ApiModelProperty(required = true, value = "")

  public List<SwaggerContribCurrents> getCurrents() {
    return currents;
  }


  public void setCurrents(List<SwaggerContribCurrents> currents) {
    this.currents = currents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwaggerContrib swaggerContrib = (SwaggerContrib) o;
    return Objects.equals(this.id, swaggerContrib.id) &&
        Objects.equals(this.name, swaggerContrib.name) &&
        Objects.equals(this.length, swaggerContrib.length) &&
        Objects.equals(this.width, swaggerContrib.width) &&
        Objects.equals(this.nfin, swaggerContrib.nfin) &&
        Objects.equals(this.voltages, swaggerContrib.voltages) &&
        Objects.equals(this.currents, swaggerContrib.currents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, length, width, nfin, voltages, currents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwaggerContrib {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    nfin: ").append(toIndentedString(nfin)).append("\n");
    sb.append("    voltages: ").append(toIndentedString(voltages)).append("\n");
    sb.append("    currents: ").append(toIndentedString(currents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


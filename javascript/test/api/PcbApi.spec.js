/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PowermeterApi);
  }
}(this, function(expect, PowermeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PowermeterApi.PcbApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PcbApi', function() {
    describe('pcbCommitCreate', function() {
      it('should call pcbCommitCreate successfully', function(done) {
        //uncomment below and update the code to test pcbCommitCreate
        //instance.pcbCommitCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryClone', function() {
      it('should call pcbLibraryClone successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryClone
        //instance.pcbLibraryClone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryCreate', function() {
      it('should call pcbLibraryCreate successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryCreate
        //instance.pcbLibraryCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryDelete', function() {
      it('should call pcbLibraryDelete successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryDelete
        //instance.pcbLibraryDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryList', function() {
      it('should call pcbLibraryList successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryList
        //instance.pcbLibraryList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryRead', function() {
      it('should call pcbLibraryRead successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryRead
        //instance.pcbLibraryRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryUpdate', function() {
      it('should call pcbLibraryUpdate successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryUpdate
        //instance.pcbLibraryUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryUpdateList', function() {
      it('should call pcbLibraryUpdateList successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryUpdateList
        //instance.pcbLibraryUpdateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbLibraryVersionList', function() {
      it('should call pcbLibraryVersionList successfully', function(done) {
        //uncomment below and update the code to test pcbLibraryVersionList
        //instance.pcbLibraryVersionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbPermissionsList', function() {
      it('should call pcbPermissionsList successfully', function(done) {
        //uncomment below and update the code to test pcbPermissionsList
        //instance.pcbPermissionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbPermissionsUpdate', function() {
      it('should call pcbPermissionsUpdate successfully', function(done) {
        //uncomment below and update the code to test pcbPermissionsUpdate
        //instance.pcbPermissionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbRead', function() {
      it('should call pcbRead successfully', function(done) {
        //uncomment below and update the code to test pcbRead
        //instance.pcbRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbRestoreCreate', function() {
      it('should call pcbRestoreCreate successfully', function(done) {
        //uncomment below and update the code to test pcbRestoreCreate
        //instance.pcbRestoreCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbSupplyClone', function() {
      it('should call pcbSupplyClone successfully', function(done) {
        //uncomment below and update the code to test pcbSupplyClone
        //instance.pcbSupplyClone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbSupplyCreate', function() {
      it('should call pcbSupplyCreate successfully', function(done) {
        //uncomment below and update the code to test pcbSupplyCreate
        //instance.pcbSupplyCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbSupplyDelete', function() {
      it('should call pcbSupplyDelete successfully', function(done) {
        //uncomment below and update the code to test pcbSupplyDelete
        //instance.pcbSupplyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbSupplyList', function() {
      it('should call pcbSupplyList successfully', function(done) {
        //uncomment below and update the code to test pcbSupplyList
        //instance.pcbSupplyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbSupplyRead', function() {
      it('should call pcbSupplyRead successfully', function(done) {
        //uncomment below and update the code to test pcbSupplyRead
        //instance.pcbSupplyRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbSupplyUpdate', function() {
      it('should call pcbSupplyUpdate successfully', function(done) {
        //uncomment below and update the code to test pcbSupplyUpdate
        //instance.pcbSupplyUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbUpdate', function() {
      it('should call pcbUpdate successfully', function(done) {
        //uncomment below and update the code to test pcbUpdate
        //instance.pcbUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbUpdateList', function() {
      it('should call pcbUpdateList successfully', function(done) {
        //uncomment below and update the code to test pcbUpdateList
        //instance.pcbUpdateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pcbVersionList', function() {
      it('should call pcbVersionList successfully', function(done) {
        //uncomment below and update the code to test pcbVersionList
        //instance.pcbVersionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

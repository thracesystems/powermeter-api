/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PowermeterApi);
  }
}(this, function(expect, PowermeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PowermeterApi.TechnologyApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TechnologyApi', function() {
    describe('apiTechnologyDeviceDataDeleteAll', function() {
      it('should call apiTechnologyDeviceDataDeleteAll successfully', function(done) {
        //uncomment below and update the code to test apiTechnologyDeviceDataDeleteAll
        //instance.apiTechnologyDeviceDataDeleteAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTechnologyDeviceDeleteAll', function() {
      it('should call apiTechnologyDeviceDeleteAll successfully', function(done) {
        //uncomment below and update the code to test apiTechnologyDeviceDeleteAll
        //instance.apiTechnologyDeviceDeleteAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyCommitCreate', function() {
      it('should call technologyCommitCreate successfully', function(done) {
        //uncomment below and update the code to test technologyCommitCreate
        //instance.technologyCommitCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyD0Create', function() {
      it('should call technologyD0Create successfully', function(done) {
        //uncomment below and update the code to test technologyD0Create
        //instance.technologyD0Create(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyD0Delete', function() {
      it('should call technologyD0Delete successfully', function(done) {
        //uncomment below and update the code to test technologyD0Delete
        //instance.technologyD0Delete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyD0List', function() {
      it('should call technologyD0List successfully', function(done) {
        //uncomment below and update the code to test technologyD0List
        //instance.technologyD0List(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyD0Read', function() {
      it('should call technologyD0Read successfully', function(done) {
        //uncomment below and update the code to test technologyD0Read
        //instance.technologyD0Read(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyD0Update', function() {
      it('should call technologyD0Update successfully', function(done) {
        //uncomment below and update the code to test technologyD0Update
        //instance.technologyD0Update(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceCreate', function() {
      it('should call technologyDeviceCreate successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceCreate
        //instance.technologyDeviceCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataBulkCreate', function() {
      it('should call technologyDeviceDataBulkCreate successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataBulkCreate
        //instance.technologyDeviceDataBulkCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataComputeList', function() {
      it('should call technologyDeviceDataComputeList successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataComputeList
        //instance.technologyDeviceDataComputeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataCreate', function() {
      it('should call technologyDeviceDataCreate successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataCreate
        //instance.technologyDeviceDataCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataDelete', function() {
      it('should call technologyDeviceDataDelete successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataDelete
        //instance.technologyDeviceDataDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataList', function() {
      it('should call technologyDeviceDataList successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataList
        //instance.technologyDeviceDataList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataRead', function() {
      it('should call technologyDeviceDataRead successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataRead
        //instance.technologyDeviceDataRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataTrainCreate', function() {
      it('should call technologyDeviceDataTrainCreate successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataTrainCreate
        //instance.technologyDeviceDataTrainCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDataUpdate', function() {
      it('should call technologyDeviceDataUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDataUpdate
        //instance.technologyDeviceDataUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceDelete', function() {
      it('should call technologyDeviceDelete successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceDelete
        //instance.technologyDeviceDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceList', function() {
      it('should call technologyDeviceList successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceList
        //instance.technologyDeviceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceRead', function() {
      it('should call technologyDeviceRead successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceRead
        //instance.technologyDeviceRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyDeviceUpdate', function() {
      it('should call technologyDeviceUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyDeviceUpdate
        //instance.technologyDeviceUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackClone', function() {
      it('should call technologyLayerstackClone successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackClone
        //instance.technologyLayerstackClone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackCreate', function() {
      it('should call technologyLayerstackCreate successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackCreate
        //instance.technologyLayerstackCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackDelete', function() {
      it('should call technologyLayerstackDelete successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackDelete
        //instance.technologyLayerstackDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackLayerClone', function() {
      it('should call technologyLayerstackLayerClone successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackLayerClone
        //instance.technologyLayerstackLayerClone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackLayerCreate', function() {
      it('should call technologyLayerstackLayerCreate successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackLayerCreate
        //instance.technologyLayerstackLayerCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackLayerDelete', function() {
      it('should call technologyLayerstackLayerDelete successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackLayerDelete
        //instance.technologyLayerstackLayerDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackLayerList', function() {
      it('should call technologyLayerstackLayerList successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackLayerList
        //instance.technologyLayerstackLayerList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackLayerRead', function() {
      it('should call technologyLayerstackLayerRead successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackLayerRead
        //instance.technologyLayerstackLayerRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackLayerUpdate', function() {
      it('should call technologyLayerstackLayerUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackLayerUpdate
        //instance.technologyLayerstackLayerUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackList', function() {
      it('should call technologyLayerstackList successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackList
        //instance.technologyLayerstackList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackRead', function() {
      it('should call technologyLayerstackRead successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackRead
        //instance.technologyLayerstackRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackUpdate', function() {
      it('should call technologyLayerstackUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackUpdate
        //instance.technologyLayerstackUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLayerstackUpdateList', function() {
      it('should call technologyLayerstackUpdateList successfully', function(done) {
        //uncomment below and update the code to test technologyLayerstackUpdateList
        //instance.technologyLayerstackUpdateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryClone', function() {
      it('should call technologyLibraryClone successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryClone
        //instance.technologyLibraryClone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryCreate', function() {
      it('should call technologyLibraryCreate successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryCreate
        //instance.technologyLibraryCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryDelete', function() {
      it('should call technologyLibraryDelete successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryDelete
        //instance.technologyLibraryDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryList', function() {
      it('should call technologyLibraryList successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryList
        //instance.technologyLibraryList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryRead', function() {
      it('should call technologyLibraryRead successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryRead
        //instance.technologyLibraryRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryUpdate', function() {
      it('should call technologyLibraryUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryUpdate
        //instance.technologyLibraryUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryUpdateList', function() {
      it('should call technologyLibraryUpdateList successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryUpdateList
        //instance.technologyLibraryUpdateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyLibraryVersionList', function() {
      it('should call technologyLibraryVersionList successfully', function(done) {
        //uncomment below and update the code to test technologyLibraryVersionList
        //instance.technologyLibraryVersionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyModelCornerCreate', function() {
      it('should call technologyModelCornerCreate successfully', function(done) {
        //uncomment below and update the code to test technologyModelCornerCreate
        //instance.technologyModelCornerCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyModelCornerDelete', function() {
      it('should call technologyModelCornerDelete successfully', function(done) {
        //uncomment below and update the code to test technologyModelCornerDelete
        //instance.technologyModelCornerDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyModelCornerList', function() {
      it('should call technologyModelCornerList successfully', function(done) {
        //uncomment below and update the code to test technologyModelCornerList
        //instance.technologyModelCornerList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyModelCornerRead', function() {
      it('should call technologyModelCornerRead successfully', function(done) {
        //uncomment below and update the code to test technologyModelCornerRead
        //instance.technologyModelCornerRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyModelCornerUpdate', function() {
      it('should call technologyModelCornerUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyModelCornerUpdate
        //instance.technologyModelCornerUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyPermissionsList', function() {
      it('should call technologyPermissionsList successfully', function(done) {
        //uncomment below and update the code to test technologyPermissionsList
        //instance.technologyPermissionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyPermissionsUpdate', function() {
      it('should call technologyPermissionsUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyPermissionsUpdate
        //instance.technologyPermissionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyRcCornerCreate', function() {
      it('should call technologyRcCornerCreate successfully', function(done) {
        //uncomment below and update the code to test technologyRcCornerCreate
        //instance.technologyRcCornerCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyRcCornerDelete', function() {
      it('should call technologyRcCornerDelete successfully', function(done) {
        //uncomment below and update the code to test technologyRcCornerDelete
        //instance.technologyRcCornerDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyRcCornerList', function() {
      it('should call technologyRcCornerList successfully', function(done) {
        //uncomment below and update the code to test technologyRcCornerList
        //instance.technologyRcCornerList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyRcCornerRead', function() {
      it('should call technologyRcCornerRead successfully', function(done) {
        //uncomment below and update the code to test technologyRcCornerRead
        //instance.technologyRcCornerRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyRcCornerUpdate', function() {
      it('should call technologyRcCornerUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyRcCornerUpdate
        //instance.technologyRcCornerUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyRead', function() {
      it('should call technologyRead successfully', function(done) {
        //uncomment below and update the code to test technologyRead
        //instance.technologyRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyRestoreCreate', function() {
      it('should call technologyRestoreCreate successfully', function(done) {
        //uncomment below and update the code to test technologyRestoreCreate
        //instance.technologyRestoreCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologySourceCreate', function() {
      it('should call technologySourceCreate successfully', function(done) {
        //uncomment below and update the code to test technologySourceCreate
        //instance.technologySourceCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologySourceDelete', function() {
      it('should call technologySourceDelete successfully', function(done) {
        //uncomment below and update the code to test technologySourceDelete
        //instance.technologySourceDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologySourceList', function() {
      it('should call technologySourceList successfully', function(done) {
        //uncomment below and update the code to test technologySourceList
        //instance.technologySourceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologySourceRead', function() {
      it('should call technologySourceRead successfully', function(done) {
        //uncomment below and update the code to test technologySourceRead
        //instance.technologySourceRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologySourceUpdate', function() {
      it('should call technologySourceUpdate successfully', function(done) {
        //uncomment below and update the code to test technologySourceUpdate
        //instance.technologySourceUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyUpdate', function() {
      it('should call technologyUpdate successfully', function(done) {
        //uncomment below and update the code to test technologyUpdate
        //instance.technologyUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyUpdateList', function() {
      it('should call technologyUpdateList successfully', function(done) {
        //uncomment below and update the code to test technologyUpdateList
        //instance.technologyUpdateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyVersionList', function() {
      it('should call technologyVersionList successfully', function(done) {
        //uncomment below and update the code to test technologyVersionList
        //instance.technologyVersionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('technologyVersionRead', function() {
      it('should call technologyVersionRead successfully', function(done) {
        //uncomment below and update the code to test technologyVersionRead
        //instance.technologyVersionRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

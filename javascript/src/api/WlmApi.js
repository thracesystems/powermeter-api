/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import WLMModel from '../model/WLMModel';
import WLMVersion from '../model/WLMVersion';
import WireLoad from '../model/WireLoad';

/**
* Wlm service.
* @module api/WlmApi
* @version 2021.4.1
*/
export default class WlmApi {

    /**
    * Constructs a new WlmApi. 
    * @alias module:api/WlmApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the wlmCommitCreate operation.
     * @callback module:api/WlmApi~wlmCommitCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WLMVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Commit a version
     * @param {Number} wlmid 
     * @param {module:model/WLMVersion} data 
     * @param {module:api/WlmApi~wlmCommitCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WLMVersion}
     */
    wlmCommitCreate(wlmid, data, callback) {
      let postBody = data;
      // verify the required parameter 'wlmid' is set
      if (wlmid === undefined || wlmid === null) {
        throw new Error("Missing the required parameter 'wlmid' when calling wlmCommitCreate");
      }
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling wlmCommitCreate");
      }

      let pathParams = {
        'wlmid': wlmid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WLMVersion;
      return this.apiClient.callApi(
        '/wlm/{wlmid}/commit/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wlmCreate operation.
     * @callback module:api/WlmApi~wlmCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WireLoad} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create wire load data
     * @param {Number} wlmid 
     * @param {module:model/WireLoad} data 
     * @param {module:api/WlmApi~wlmCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WireLoad}
     */
    wlmCreate(wlmid, data, callback) {
      let postBody = data;
      // verify the required parameter 'wlmid' is set
      if (wlmid === undefined || wlmid === null) {
        throw new Error("Missing the required parameter 'wlmid' when calling wlmCreate");
      }
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling wlmCreate");
      }

      let pathParams = {
        'wlmid': wlmid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WireLoad;
      return this.apiClient.callApi(
        '/wlm/{wlmid}/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wlmDataCreate operation.
     * @callback module:api/WlmApi~wlmDataCreateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete wire load data
     * @param {Number} wlmid 
     * @param {Number} dataid 
     * @param {module:api/WlmApi~wlmDataCreateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wlmDataCreate(wlmid, dataid, callback) {
      let postBody = null;
      // verify the required parameter 'wlmid' is set
      if (wlmid === undefined || wlmid === null) {
        throw new Error("Missing the required parameter 'wlmid' when calling wlmDataCreate");
      }
      // verify the required parameter 'dataid' is set
      if (dataid === undefined || dataid === null) {
        throw new Error("Missing the required parameter 'dataid' when calling wlmDataCreate");
      }

      let pathParams = {
        'wlmid': wlmid,
        'dataid': dataid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wlm/{wlmid}/data/{dataid}/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wlmDataRead operation.
     * @callback module:api/WlmApi~wlmDataReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WireLoad} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of wire load data
     * @param {Number} wlmid 
     * @param {Number} dataid 
     * @param {module:api/WlmApi~wlmDataReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WireLoad}
     */
    wlmDataRead(wlmid, dataid, callback) {
      let postBody = null;
      // verify the required parameter 'wlmid' is set
      if (wlmid === undefined || wlmid === null) {
        throw new Error("Missing the required parameter 'wlmid' when calling wlmDataRead");
      }
      // verify the required parameter 'dataid' is set
      if (dataid === undefined || dataid === null) {
        throw new Error("Missing the required parameter 'dataid' when calling wlmDataRead");
      }

      let pathParams = {
        'wlmid': wlmid,
        'dataid': dataid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WireLoad;
      return this.apiClient.callApi(
        '/wlm/{wlmid}/data/{dataid}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wlmDataUpdate operation.
     * @callback module:api/WlmApi~wlmDataUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WireLoad} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update wire load data
     * @param {Number} wlmid 
     * @param {Number} dataid 
     * @param {module:model/WireLoad} data 
     * @param {module:api/WlmApi~wlmDataUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WireLoad}
     */
    wlmDataUpdate(wlmid, dataid, data, callback) {
      let postBody = data;
      // verify the required parameter 'wlmid' is set
      if (wlmid === undefined || wlmid === null) {
        throw new Error("Missing the required parameter 'wlmid' when calling wlmDataUpdate");
      }
      // verify the required parameter 'dataid' is set
      if (dataid === undefined || dataid === null) {
        throw new Error("Missing the required parameter 'dataid' when calling wlmDataUpdate");
      }
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling wlmDataUpdate");
      }

      let pathParams = {
        'wlmid': wlmid,
        'dataid': dataid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WireLoad;
      return this.apiClient.callApi(
        '/wlm/{wlmid}/data/{dataid}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wlmRead operation.
     * @callback module:api/WlmApi~wlmReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WLMModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of wire load data
     * @param {Number} wlmid 
     * @param {module:api/WlmApi~wlmReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WLMModel}
     */
    wlmRead(wlmid, callback) {
      let postBody = null;
      // verify the required parameter 'wlmid' is set
      if (wlmid === undefined || wlmid === null) {
        throw new Error("Missing the required parameter 'wlmid' when calling wlmRead");
      }

      let pathParams = {
        'wlmid': wlmid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WLMModel;
      return this.apiClient.callApi(
        '/wlm/{wlmid}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wlmVersionList operation.
     * @callback module:api/WlmApi~wlmVersionListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/WLMVersion>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get WLM versions
     * @param {String} wlmid 
     * @param {Number} pcbid 
     * @param {module:api/WlmApi~wlmVersionListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/WLMVersion>}
     */
    wlmVersionList(wlmid, pcbid, callback) {
      let postBody = null;
      // verify the required parameter 'wlmid' is set
      if (wlmid === undefined || wlmid === null) {
        throw new Error("Missing the required parameter 'wlmid' when calling wlmVersionList");
      }
      // verify the required parameter 'pcbid' is set
      if (pcbid === undefined || pcbid === null) {
        throw new Error("Missing the required parameter 'pcbid' when calling wlmVersionList");
      }

      let pathParams = {
        'wlmid': wlmid,
        'pcbid': pcbid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [WLMVersion];
      return this.apiClient.callApi(
        '/wlm/{wlmid}/version/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}

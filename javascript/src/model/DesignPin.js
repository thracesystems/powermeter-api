/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PinCap from './PinCap';

/**
 * The DesignPin model module.
 * @module model/DesignPin
 * @version 2021.4.1
 */
class DesignPin {
    /**
     * Constructs a new <code>DesignPin</code>.
     * @alias module:model/DesignPin
     * @param name {String} 
     * @param direction {module:model/DesignPin.DirectionEnum} 
     */
    constructor(name, direction) { 
        
        DesignPin.initialize(this, name, direction);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, direction) { 
        obj['name'] = name;
        obj['direction'] = direction;
    }

    /**
     * Constructs a <code>DesignPin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DesignPin} obj Optional instance to populate.
     * @return {module:model/DesignPin} The populated <code>DesignPin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DesignPin();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('bus')) {
                obj['bus'] = ApiClient.convertToType(data['bus'], 'String');
            }
            if (data.hasOwnProperty('bus_index')) {
                obj['bus_index'] = ApiClient.convertToType(data['bus_index'], 'Number');
            }
            if (data.hasOwnProperty('bundle')) {
                obj['bundle'] = ApiClient.convertToType(data['bundle'], 'String');
            }
            if (data.hasOwnProperty('bundle_index')) {
                obj['bundle_index'] = ApiClient.convertToType(data['bundle_index'], 'Number');
            }
            if (data.hasOwnProperty('pin_caps')) {
                obj['pin_caps'] = ApiClient.convertToType(data['pin_caps'], [PinCap]);
            }
            if (data.hasOwnProperty('power_count')) {
                obj['power_count'] = ApiClient.convertToType(data['power_count'], 'Number');
            }
            if (data.hasOwnProperty('function')) {
                obj['function'] = ApiClient.convertToType(data['function'], 'String');
            }
            if (data.hasOwnProperty('internal_node')) {
                obj['internal_node'] = ApiClient.convertToType(data['internal_node'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
DesignPin.prototype['id'] = undefined;

/**
 * @member {String} name
 */
DesignPin.prototype['name'] = undefined;

/**
 * @member {module:model/DesignPin.DirectionEnum} direction
 */
DesignPin.prototype['direction'] = undefined;

/**
 * @member {String} type
 */
DesignPin.prototype['type'] = undefined;

/**
 * @member {String} bus
 */
DesignPin.prototype['bus'] = undefined;

/**
 * @member {Number} bus_index
 */
DesignPin.prototype['bus_index'] = undefined;

/**
 * @member {String} bundle
 */
DesignPin.prototype['bundle'] = undefined;

/**
 * @member {Number} bundle_index
 */
DesignPin.prototype['bundle_index'] = undefined;

/**
 * @member {Array.<module:model/PinCap>} pin_caps
 */
DesignPin.prototype['pin_caps'] = undefined;

/**
 * @member {Number} power_count
 */
DesignPin.prototype['power_count'] = undefined;

/**
 * @member {String} function
 */
DesignPin.prototype['function'] = undefined;

/**
 * @member {String} internal_node
 */
DesignPin.prototype['internal_node'] = undefined;





/**
 * Allowed values for the <code>direction</code> property.
 * @enum {String}
 * @readonly
 */
DesignPin['DirectionEnum'] = {

    /**
     * value: "input"
     * @const
     */
    "input": "input",

    /**
     * value: "output"
     * @const
     */
    "output": "output",

    /**
     * value: "inout"
     * @const
     */
    "inout": "inout",

    /**
     * value: "internal"
     * @const
     */
    "internal": "internal"
};



export default DesignPin;


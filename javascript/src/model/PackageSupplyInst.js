/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PackageSupplyInst model module.
 * @module model/PackageSupplyInst
 * @version 2021.4.1
 */
class PackageSupplyInst {
    /**
     * Constructs a new <code>PackageSupplyInst</code>.
     * @alias module:model/PackageSupplyInst
     * @param master {Number} 
     */
    constructor(master) { 
        
        PackageSupplyInst.initialize(this, master);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, master) { 
        obj['master'] = master;
    }

    /**
     * Constructs a <code>PackageSupplyInst</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PackageSupplyInst} obj Optional instance to populate.
     * @return {module:model/PackageSupplyInst} The populated <code>PackageSupplyInst</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PackageSupplyInst();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('container')) {
                obj['container'] = ApiClient.convertToType(data['container'], 'Number');
            }
            if (data.hasOwnProperty('master')) {
                obj['master'] = ApiClient.convertToType(data['master'], 'Number');
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
            if (data.hasOwnProperty('connection_color')) {
                obj['connection_color'] = ApiClient.convertToType(data['connection_color'], 'String');
            }
            if (data.hasOwnProperty('master_name')) {
                obj['master_name'] = ApiClient.convertToType(data['master_name'], 'String');
            }
            if (data.hasOwnProperty('hier_name')) {
                obj['hier_name'] = ApiClient.convertToType(data['hier_name'], 'String');
            }
            if (data.hasOwnProperty('connected_to')) {
                obj['connected_to'] = ApiClient.convertToType(data['connected_to'], 'Number');
            }
            if (data.hasOwnProperty('connected_to_type')) {
                obj['connected_to_type'] = ApiClient.convertToType(data['connected_to_type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
PackageSupplyInst.prototype['id'] = undefined;

/**
 * @member {Number} container
 */
PackageSupplyInst.prototype['container'] = undefined;

/**
 * @member {Number} master
 */
PackageSupplyInst.prototype['master'] = undefined;

/**
 * @member {String} color
 */
PackageSupplyInst.prototype['color'] = undefined;

/**
 * @member {String} connection_color
 */
PackageSupplyInst.prototype['connection_color'] = undefined;

/**
 * @member {String} master_name
 */
PackageSupplyInst.prototype['master_name'] = undefined;

/**
 * @member {String} hier_name
 */
PackageSupplyInst.prototype['hier_name'] = undefined;

/**
 * @member {Number} connected_to
 */
PackageSupplyInst.prototype['connected_to'] = undefined;

/**
 * @member {String} connected_to_type
 */
PackageSupplyInst.prototype['connected_to_type'] = undefined;






export default PackageSupplyInst;


/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StateEquaiton from './StateEquaiton';

/**
 * The DesignStateTable model module.
 * @module model/DesignStateTable
 * @version 2021.4.1
 */
class DesignStateTable {
    /**
     * Constructs a new <code>DesignStateTable</code>.
     * @alias module:model/DesignStateTable
     * @param inNodes {Array.<String>} 
     * @param intNodes {Array.<String>} 
     * @param table {String} 
     */
    constructor(inNodes, intNodes, table) { 
        
        DesignStateTable.initialize(this, inNodes, intNodes, table);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inNodes, intNodes, table) { 
        obj['in_nodes'] = inNodes;
        obj['int_nodes'] = intNodes;
        obj['table'] = table;
    }

    /**
     * Constructs a <code>DesignStateTable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DesignStateTable} obj Optional instance to populate.
     * @return {module:model/DesignStateTable} The populated <code>DesignStateTable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DesignStateTable();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('in_nodes')) {
                obj['in_nodes'] = ApiClient.convertToType(data['in_nodes'], ['String']);
            }
            if (data.hasOwnProperty('int_nodes')) {
                obj['int_nodes'] = ApiClient.convertToType(data['int_nodes'], ['String']);
            }
            if (data.hasOwnProperty('table')) {
                obj['table'] = ApiClient.convertToType(data['table'], 'String');
            }
            if (data.hasOwnProperty('high')) {
                obj['high'] = ApiClient.convertToType(data['high'], [StateEquaiton]);
            }
            if (data.hasOwnProperty('low')) {
                obj['low'] = ApiClient.convertToType(data['low'], [StateEquaiton]);
            }
            if (data.hasOwnProperty('nc')) {
                obj['nc'] = ApiClient.convertToType(data['nc'], [StateEquaiton]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
DesignStateTable.prototype['id'] = undefined;

/**
 * @member {Array.<String>} in_nodes
 */
DesignStateTable.prototype['in_nodes'] = undefined;

/**
 * @member {Array.<String>} int_nodes
 */
DesignStateTable.prototype['int_nodes'] = undefined;

/**
 * @member {String} table
 */
DesignStateTable.prototype['table'] = undefined;

/**
 * @member {Array.<module:model/StateEquaiton>} high
 */
DesignStateTable.prototype['high'] = undefined;

/**
 * @member {Array.<module:model/StateEquaiton>} low
 */
DesignStateTable.prototype['low'] = undefined;

/**
 * @member {Array.<module:model/StateEquaiton>} nc
 */
DesignStateTable.prototype['nc'] = undefined;






export default DesignStateTable;


/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceModeConfig from './InstanceModeConfig';
import InstanceModeUtilization from './InstanceModeUtilization';

/**
 * The InstanceMode model module.
 * @module model/InstanceMode
 * @version 2021.4.1
 */
class InstanceMode {
    /**
     * Constructs a new <code>InstanceMode</code>.
     * @alias module:model/InstanceMode
     * @param designmode {Number} 
     * @param utilizations {Array.<module:model/InstanceModeUtilization>} 
     * @param config {Array.<module:model/InstanceModeConfig>} 
     */
    constructor(designmode, utilizations, config) { 
        
        InstanceMode.initialize(this, designmode, utilizations, config);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, designmode, utilizations, config) { 
        obj['designmode'] = designmode;
        obj['utilizations'] = utilizations;
        obj['config'] = config;
    }

    /**
     * Constructs a <code>InstanceMode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceMode} obj Optional instance to populate.
     * @return {module:model/InstanceMode} The populated <code>InstanceMode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceMode();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('designmode')) {
                obj['designmode'] = ApiClient.convertToType(data['designmode'], 'Number');
            }
            if (data.hasOwnProperty('utilizations')) {
                obj['utilizations'] = ApiClient.convertToType(data['utilizations'], [InstanceModeUtilization]);
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], [InstanceModeConfig]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
InstanceMode.prototype['id'] = undefined;

/**
 * @member {Number} designmode
 */
InstanceMode.prototype['designmode'] = undefined;

/**
 * @member {Array.<module:model/InstanceModeUtilization>} utilizations
 */
InstanceMode.prototype['utilizations'] = undefined;

/**
 * @member {Array.<module:model/InstanceModeConfig>} config
 */
InstanceMode.prototype['config'] = undefined;






export default InstanceMode;


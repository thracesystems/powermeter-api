/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DesignTrend model module.
 * @module model/DesignTrend
 * @version 2021.4.1
 */
class DesignTrend {
    /**
     * Constructs a new <code>DesignTrend</code>.
     * @alias module:model/DesignTrend
     */
    constructor() { 
        
        DesignTrend.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DesignTrend</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DesignTrend} obj Optional instance to populate.
     * @return {module:model/DesignTrend} The populated <code>DesignTrend</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DesignTrend();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('excludedDataIds')) {
                obj['excludedDataIds'] = ApiClient.convertToType(data['excludedDataIds'], ['Number']);
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], 'String');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('subtitle')) {
                obj['subtitle'] = ApiClient.convertToType(data['subtitle'], 'String');
            }
            if (data.hasOwnProperty('xaxistype')) {
                obj['xaxistype'] = ApiClient.convertToType(data['xaxistype'], 'String');
            }
            if (data.hasOwnProperty('xaxisfield')) {
                obj['xaxisfield'] = ApiClient.convertToType(data['xaxisfield'], 'String');
            }
            if (data.hasOwnProperty('xaxislabel')) {
                obj['xaxislabel'] = ApiClient.convertToType(data['xaxislabel'], 'String');
            }
            if (data.hasOwnProperty('minx')) {
                obj['minx'] = ApiClient.convertToType(data['minx'], 'Number');
            }
            if (data.hasOwnProperty('maxx')) {
                obj['maxx'] = ApiClient.convertToType(data['maxx'], 'Number');
            }
            if (data.hasOwnProperty('yaxisfield')) {
                obj['yaxisfield'] = ApiClient.convertToType(data['yaxisfield'], 'String');
            }
            if (data.hasOwnProperty('yaxislabel')) {
                obj['yaxislabel'] = ApiClient.convertToType(data['yaxislabel'], 'String');
            }
            if (data.hasOwnProperty('miny')) {
                obj['miny'] = ApiClient.convertToType(data['miny'], 'Number');
            }
            if (data.hasOwnProperty('maxy')) {
                obj['maxy'] = ApiClient.convertToType(data['maxy'], 'Number');
            }
            if (data.hasOwnProperty('linetype')) {
                obj['linetype'] = ApiClient.convertToType(data['linetype'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
DesignTrend.prototype['id'] = undefined;

/**
 * @member {Array.<Number>} excludedDataIds
 */
DesignTrend.prototype['excludedDataIds'] = undefined;

/**
 * @member {String} fields
 */
DesignTrend.prototype['fields'] = undefined;

/**
 * @member {String} filter
 */
DesignTrend.prototype['filter'] = undefined;

/**
 * @member {String} title
 */
DesignTrend.prototype['title'] = undefined;

/**
 * @member {String} subtitle
 */
DesignTrend.prototype['subtitle'] = undefined;

/**
 * @member {String} xaxistype
 */
DesignTrend.prototype['xaxistype'] = undefined;

/**
 * @member {String} xaxisfield
 */
DesignTrend.prototype['xaxisfield'] = undefined;

/**
 * @member {String} xaxislabel
 */
DesignTrend.prototype['xaxislabel'] = undefined;

/**
 * @member {Number} minx
 */
DesignTrend.prototype['minx'] = undefined;

/**
 * @member {Number} maxx
 */
DesignTrend.prototype['maxx'] = undefined;

/**
 * @member {String} yaxisfield
 */
DesignTrend.prototype['yaxisfield'] = undefined;

/**
 * @member {String} yaxislabel
 */
DesignTrend.prototype['yaxislabel'] = undefined;

/**
 * @member {Number} miny
 */
DesignTrend.prototype['miny'] = undefined;

/**
 * @member {Number} maxy
 */
DesignTrend.prototype['maxy'] = undefined;

/**
 * @member {String} linetype
 */
DesignTrend.prototype['linetype'] = undefined;






export default DesignTrend;


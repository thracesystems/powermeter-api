/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Param model module.
 * @module model/Param
 * @version 2021.4.1
 */
class Param {
    /**
     * Constructs a new <code>Param</code>.
     * @alias module:model/Param
     * @param name {String} 
     * @param descr {String} 
     * @param type {module:model/Param.TypeEnum} 
     */
    constructor(name, descr, type) { 
        
        Param.initialize(this, name, descr, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, descr, type) { 
        obj['name'] = name;
        obj['descr'] = descr;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>Param</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Param} obj Optional instance to populate.
     * @return {module:model/Param} The populated <code>Param</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Param();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('descr')) {
                obj['descr'] = ApiClient.convertToType(data['descr'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Param.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Param.prototype['name'] = undefined;

/**
 * @member {String} descr
 */
Param.prototype['descr'] = undefined;

/**
 * @member {module:model/Param.TypeEnum} type
 */
Param.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Param['TypeEnum'] = {

    /**
     * value: "integer"
     * @const
     */
    "integer": "integer",

    /**
     * value: "integer_const"
     * @const
     */
    "integer_const": "integer_const",

    /**
     * value: "integer_choice"
     * @const
     */
    "integer_choice": "integer_choice",

    /**
     * value: "float"
     * @const
     */
    "float": "float",

    /**
     * value: "float_choice"
     * @const
     */
    "float_choice": "float_choice",

    /**
     * value: "float_const"
     * @const
     */
    "float_const": "float_const",

    /**
     * value: "text_choice"
     * @const
     */
    "text_choice": "text_choice"
};



export default Param;


/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LeakagePower from './LeakagePower';
import PinEnergy from './PinEnergy';

/**
 * The ComputedPowerArc model module.
 * @module model/ComputedPowerArc
 * @version 2021.4.1
 */
class ComputedPowerArc {
    /**
     * Constructs a new <code>ComputedPowerArc</code>.
     * @alias module:model/ComputedPowerArc
     * @param energy {Array.<module:model/PinEnergy>} 
     * @param leakage {Array.<module:model/LeakagePower>} 
     */
    constructor(energy, leakage) { 
        
        ComputedPowerArc.initialize(this, energy, leakage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, energy, leakage) { 
        obj['energy'] = energy;
        obj['leakage'] = leakage;
    }

    /**
     * Constructs a <code>ComputedPowerArc</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComputedPowerArc} obj Optional instance to populate.
     * @return {module:model/ComputedPowerArc} The populated <code>ComputedPowerArc</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComputedPowerArc();

            if (data.hasOwnProperty('energy')) {
                obj['energy'] = ApiClient.convertToType(data['energy'], [PinEnergy]);
            }
            if (data.hasOwnProperty('leakage')) {
                obj['leakage'] = ApiClient.convertToType(data['leakage'], [LeakagePower]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/PinEnergy>} energy
 */
ComputedPowerArc.prototype['energy'] = undefined;

/**
 * @member {Array.<module:model/LeakagePower>} leakage
 */
ComputedPowerArc.prototype['leakage'] = undefined;






export default ComputedPowerArc;


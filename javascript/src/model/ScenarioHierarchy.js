/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DesignInstance from './DesignInstance';
import PCBInstance from './PCBInstance';
import PackageInstance from './PackageInstance';
import VRInstance from './VRInstance';

/**
 * The ScenarioHierarchy model module.
 * @module model/ScenarioHierarchy
 * @version 2021.4.1
 */
class ScenarioHierarchy {
    /**
     * Constructs a new <code>ScenarioHierarchy</code>.
     * @alias module:model/ScenarioHierarchy
     * @param pcb {Array.<module:model/PCBInstance>} 
     * @param vr {Array.<module:model/VRInstance>} 
     * @param _package {Array.<module:model/PackageInstance>} 
     * @param design {Array.<module:model/DesignInstance>} 
     */
    constructor(pcb, vr, _package, design) { 
        
        ScenarioHierarchy.initialize(this, pcb, vr, _package, design);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pcb, vr, _package, design) { 
        obj['pcb'] = pcb;
        obj['vr'] = vr;
        obj['package'] = _package;
        obj['design'] = design;
    }

    /**
     * Constructs a <code>ScenarioHierarchy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScenarioHierarchy} obj Optional instance to populate.
     * @return {module:model/ScenarioHierarchy} The populated <code>ScenarioHierarchy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScenarioHierarchy();

            if (data.hasOwnProperty('pcb')) {
                obj['pcb'] = ApiClient.convertToType(data['pcb'], [PCBInstance]);
            }
            if (data.hasOwnProperty('vr')) {
                obj['vr'] = ApiClient.convertToType(data['vr'], [VRInstance]);
            }
            if (data.hasOwnProperty('package')) {
                obj['package'] = ApiClient.convertToType(data['package'], [PackageInstance]);
            }
            if (data.hasOwnProperty('design')) {
                obj['design'] = ApiClient.convertToType(data['design'], [DesignInstance]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/PCBInstance>} pcb
 */
ScenarioHierarchy.prototype['pcb'] = undefined;

/**
 * @member {Array.<module:model/VRInstance>} vr
 */
ScenarioHierarchy.prototype['vr'] = undefined;

/**
 * @member {Array.<module:model/PackageInstance>} package
 */
ScenarioHierarchy.prototype['package'] = undefined;

/**
 * @member {Array.<module:model/DesignInstance>} design
 */
ScenarioHierarchy.prototype['design'] = undefined;






export default ScenarioHierarchy;


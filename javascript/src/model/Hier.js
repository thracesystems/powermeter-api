/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Hier model module.
 * @module model/Hier
 * @version 2021.4.1
 */
class Hier {
    /**
     * Constructs a new <code>Hier</code>.
     * @alias module:model/Hier
     * @param name {String} 
     */
    constructor(name) { 
        
        Hier.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Hier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Hier} obj Optional instance to populate.
     * @return {module:model/Hier} The populated <code>Hier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Hier();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('instance')) {
                obj['instance'] = ApiClient.convertToType(data['instance'], 'Boolean');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'Boolean');
            }
            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], ['String']);
            }
            if (data.hasOwnProperty('is_open')) {
                obj['is_open'] = ApiClient.convertToType(data['is_open'], 'Boolean');
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
Hier.prototype['name'] = undefined;

/**
 * @member {String} id
 */
Hier.prototype['id'] = undefined;

/**
 * @member {Boolean} instance
 */
Hier.prototype['instance'] = undefined;

/**
 * @member {Boolean} group
 */
Hier.prototype['group'] = undefined;

/**
 * @member {Array.<String>} children
 */
Hier.prototype['children'] = undefined;

/**
 * @member {Boolean} is_open
 */
Hier.prototype['is_open'] = undefined;

/**
 * @member {String} color
 */
Hier.prototype['color'] = undefined;

/**
 * @member {Number} parent
 */
Hier.prototype['parent'] = undefined;






export default Hier;


/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VRSupplyInst from './VRSupplyInst';

/**
 * The VRInstance model module.
 * @module model/VRInstance
 * @version 2021.4.1
 */
class VRInstance {
    /**
     * Constructs a new <code>VRInstance</code>.
     * @alias module:model/VRInstance
     * @param name {String} 
     * @param master {Number} 
     * @param supplies {Array.<module:model/VRSupplyInst>} 
     */
    constructor(name, master, supplies) { 
        
        VRInstance.initialize(this, name, master, supplies);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, master, supplies) { 
        obj['name'] = name;
        obj['master'] = master;
        obj['supplies'] = supplies;
    }

    /**
     * Constructs a <code>VRInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VRInstance} obj Optional instance to populate.
     * @return {module:model/VRInstance} The populated <code>VRInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VRInstance();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('hier_name')) {
                obj['hier_name'] = ApiClient.convertToType(data['hier_name'], 'String');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'Number');
            }
            if (data.hasOwnProperty('parent_type')) {
                obj['parent_type'] = ApiClient.convertToType(data['parent_type'], 'String');
            }
            if (data.hasOwnProperty('master')) {
                obj['master'] = ApiClient.convertToType(data['master'], 'Number');
            }
            if (data.hasOwnProperty('master_name')) {
                obj['master_name'] = ApiClient.convertToType(data['master_name'], 'String');
            }
            if (data.hasOwnProperty('master_master')) {
                obj['master_master'] = ApiClient.convertToType(data['master_master'], 'Number');
            }
            if (data.hasOwnProperty('supplies')) {
                obj['supplies'] = ApiClient.convertToType(data['supplies'], [VRSupplyInst]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
VRInstance.prototype['id'] = undefined;

/**
 * @member {String} name
 */
VRInstance.prototype['name'] = undefined;

/**
 * @member {String} hier_name
 */
VRInstance.prototype['hier_name'] = undefined;

/**
 * @member {Number} parent_id
 */
VRInstance.prototype['parent_id'] = undefined;

/**
 * @member {String} parent_type
 */
VRInstance.prototype['parent_type'] = undefined;

/**
 * @member {Number} master
 */
VRInstance.prototype['master'] = undefined;

/**
 * @member {String} master_name
 */
VRInstance.prototype['master_name'] = undefined;

/**
 * @member {Number} master_master
 */
VRInstance.prototype['master_master'] = undefined;

/**
 * @member {Array.<module:model/VRSupplyInst>} supplies
 */
VRInstance.prototype['supplies'] = undefined;






export default VRInstance;


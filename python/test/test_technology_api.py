# coding: utf-8

"""
    PowerMeter API

    API  # noqa: E501

    The version of the OpenAPI document: 2021.4.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import powermeter_api
from powermeter_api.api.technology_api import TechnologyApi  # noqa: E501
from powermeter_api.rest import ApiException


class TestTechnologyApi(unittest.TestCase):
    """TechnologyApi unit test stubs"""

    def setUp(self):
        self.api = powermeter_api.api.technology_api.TechnologyApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_api_technology_device_data_delete_all(self):
        """Test case for api_technology_device_data_delete_all

        """
        pass

    def test_api_technology_device_delete_all(self):
        """Test case for api_technology_device_delete_all

        """
        pass

    def test_technology_commit_create(self):
        """Test case for technology_commit_create

        """
        pass

    def test_technology_d0_create(self):
        """Test case for technology_d0_create

        """
        pass

    def test_technology_d0_delete(self):
        """Test case for technology_d0_delete

        """
        pass

    def test_technology_d0_list(self):
        """Test case for technology_d0_list

        """
        pass

    def test_technology_d0_read(self):
        """Test case for technology_d0_read

        """
        pass

    def test_technology_d0_update(self):
        """Test case for technology_d0_update

        """
        pass

    def test_technology_device_create(self):
        """Test case for technology_device_create

        """
        pass

    def test_technology_device_data_bulk_create(self):
        """Test case for technology_device_data_bulk_create

        """
        pass

    def test_technology_device_data_compute_list(self):
        """Test case for technology_device_data_compute_list

        """
        pass

    def test_technology_device_data_create(self):
        """Test case for technology_device_data_create

        """
        pass

    def test_technology_device_data_delete(self):
        """Test case for technology_device_data_delete

        """
        pass

    def test_technology_device_data_list(self):
        """Test case for technology_device_data_list

        """
        pass

    def test_technology_device_data_read(self):
        """Test case for technology_device_data_read

        """
        pass

    def test_technology_device_data_train_create(self):
        """Test case for technology_device_data_train_create

        """
        pass

    def test_technology_device_data_update(self):
        """Test case for technology_device_data_update

        """
        pass

    def test_technology_device_delete(self):
        """Test case for technology_device_delete

        """
        pass

    def test_technology_device_list(self):
        """Test case for technology_device_list

        """
        pass

    def test_technology_device_read(self):
        """Test case for technology_device_read

        """
        pass

    def test_technology_device_update(self):
        """Test case for technology_device_update

        """
        pass

    def test_technology_layerstack_clone(self):
        """Test case for technology_layerstack_clone

        """
        pass

    def test_technology_layerstack_create(self):
        """Test case for technology_layerstack_create

        """
        pass

    def test_technology_layerstack_delete(self):
        """Test case for technology_layerstack_delete

        """
        pass

    def test_technology_layerstack_layer_clone(self):
        """Test case for technology_layerstack_layer_clone

        """
        pass

    def test_technology_layerstack_layer_create(self):
        """Test case for technology_layerstack_layer_create

        """
        pass

    def test_technology_layerstack_layer_delete(self):
        """Test case for technology_layerstack_layer_delete

        """
        pass

    def test_technology_layerstack_layer_list(self):
        """Test case for technology_layerstack_layer_list

        """
        pass

    def test_technology_layerstack_layer_read(self):
        """Test case for technology_layerstack_layer_read

        """
        pass

    def test_technology_layerstack_layer_update(self):
        """Test case for technology_layerstack_layer_update

        """
        pass

    def test_technology_layerstack_list(self):
        """Test case for technology_layerstack_list

        """
        pass

    def test_technology_layerstack_read(self):
        """Test case for technology_layerstack_read

        """
        pass

    def test_technology_layerstack_update(self):
        """Test case for technology_layerstack_update

        """
        pass

    def test_technology_layerstack_update_list(self):
        """Test case for technology_layerstack_update_list

        """
        pass

    def test_technology_library_clone(self):
        """Test case for technology_library_clone

        """
        pass

    def test_technology_library_create(self):
        """Test case for technology_library_create

        """
        pass

    def test_technology_library_delete(self):
        """Test case for technology_library_delete

        """
        pass

    def test_technology_library_list(self):
        """Test case for technology_library_list

        """
        pass

    def test_technology_library_read(self):
        """Test case for technology_library_read

        """
        pass

    def test_technology_library_update(self):
        """Test case for technology_library_update

        """
        pass

    def test_technology_library_update_list(self):
        """Test case for technology_library_update_list

        """
        pass

    def test_technology_library_version_list(self):
        """Test case for technology_library_version_list

        """
        pass

    def test_technology_model_corner_create(self):
        """Test case for technology_model_corner_create

        """
        pass

    def test_technology_model_corner_delete(self):
        """Test case for technology_model_corner_delete

        """
        pass

    def test_technology_model_corner_list(self):
        """Test case for technology_model_corner_list

        """
        pass

    def test_technology_model_corner_read(self):
        """Test case for technology_model_corner_read

        """
        pass

    def test_technology_model_corner_update(self):
        """Test case for technology_model_corner_update

        """
        pass

    def test_technology_permissions_list(self):
        """Test case for technology_permissions_list

        """
        pass

    def test_technology_permissions_update(self):
        """Test case for technology_permissions_update

        """
        pass

    def test_technology_rc_corner_create(self):
        """Test case for technology_rc_corner_create

        """
        pass

    def test_technology_rc_corner_delete(self):
        """Test case for technology_rc_corner_delete

        """
        pass

    def test_technology_rc_corner_list(self):
        """Test case for technology_rc_corner_list

        """
        pass

    def test_technology_rc_corner_read(self):
        """Test case for technology_rc_corner_read

        """
        pass

    def test_technology_rc_corner_update(self):
        """Test case for technology_rc_corner_update

        """
        pass

    def test_technology_read(self):
        """Test case for technology_read

        """
        pass

    def test_technology_restore_create(self):
        """Test case for technology_restore_create

        """
        pass

    def test_technology_source_create(self):
        """Test case for technology_source_create

        """
        pass

    def test_technology_source_delete(self):
        """Test case for technology_source_delete

        """
        pass

    def test_technology_source_list(self):
        """Test case for technology_source_list

        """
        pass

    def test_technology_source_read(self):
        """Test case for technology_source_read

        """
        pass

    def test_technology_source_update(self):
        """Test case for technology_source_update

        """
        pass

    def test_technology_update(self):
        """Test case for technology_update

        """
        pass

    def test_technology_update_list(self):
        """Test case for technology_update_list

        """
        pass

    def test_technology_version_list(self):
        """Test case for technology_version_list

        """
        pass

    def test_technology_version_read(self):
        """Test case for technology_version_read

        """
        pass


if __name__ == '__main__':
    unittest.main()

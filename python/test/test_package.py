# coding: utf-8

"""
    PowerMeter API

    API  # noqa: E501

    The version of the OpenAPI document: 2021.4.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import powermeter_api
from powermeter_api.models.package import Package  # noqa: E501
from powermeter_api.rest import ApiException

class TestPackage(unittest.TestCase):
    """Package unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Package
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = powermeter_api.models.package.Package()  # noqa: E501
        if include_optional :
            return Package(
                id = 56, 
                name = '0', 
                descr = '0', 
                editable = True, 
                current_version = 56, 
                version = powermeter_api.models.package_version.PackageVersion(
                    id = 56, 
                    version = 56, 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    descr = '0', 
                    package = 56, ), 
                width = 1.337, 
                height = 1.337, 
                die_width_min = 1.337, 
                die_width_max = 1.337, 
                die_height_min = 1.337, 
                die_height_max = 1.337, 
                heatspreader_samesize = True, 
                heatspreader_width = 1.337, 
                heatspreader_height = 1.337, 
                heatspreader_thickness = 1.337, 
                heatspreader_conductivity = 1.337, 
                heatspreader_heatcapacity = 1.337, 
                tim_thickness = 1.337, 
                tim_conductivity = 1.337, 
                tim_heatcapacity = 1.337, 
                underfill_thickness = 1.337, 
                c4_width = 1.337, 
                c4_number = 0, 
                c4_conductivity = 1.337, 
                c4_heatcapacity = 1.337, 
                substrate_samesize = True, 
                substrate_width = 1.337, 
                substrate_height = 1.337, 
                substrate_thickness = 1.337, 
                substrate_conductivity = 1.337, 
                substrate_heatcapacity = 1.337, 
                solderball_samesize = True, 
                solderball_width = 1.337, 
                solderball_height = 1.337, 
                solderball_thickness = 1.337, 
                solderball_conductivity = 1.337, 
                solderball_heatcapacity = 1.337
            )
        else :
            return Package(
        )

    def testPackage(self):
        """Test Package"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * StateEquaiton.h
 *
 * 
 */

#ifndef POWERMETER_MODEL_StateEquaiton_H_
#define POWERMETER_MODEL_StateEquaiton_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace powermeter {
namespace model {


/// <summary>
/// 
/// </summary>
class  StateEquaiton
    : public ModelBase
{
public:
    StateEquaiton();
    virtual ~StateEquaiton();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// StateEquaiton members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPin() const;
    bool pinIsSet() const;
    void unsetPin();

    void setPin(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEquation() const;
    bool equationIsSet() const;
    void unsetEquation();

    void setEquation(const utility::string_t& value);


protected:
    utility::string_t m_Pin;
    bool m_PinIsSet;
    utility::string_t m_Equation;
    bool m_EquationIsSet;
};


}
}

#endif /* POWERMETER_MODEL_StateEquaiton_H_ */

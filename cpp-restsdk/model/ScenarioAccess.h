/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ScenarioAccess.h
 *
 * 
 */

#ifndef POWERMETER_MODEL_ScenarioAccess_H_
#define POWERMETER_MODEL_ScenarioAccess_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace powermeter {
namespace model {


/// <summary>
/// 
/// </summary>
class  ScenarioAccess
    : public ModelBase
{
public:
    ScenarioAccess();
    virtual ~ScenarioAccess();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ScenarioAccess members

    /// <summary>
    /// 
    /// </summary>
    int32_t getDatasheet() const;
    bool datasheetIsSet() const;
    void unsetDatasheet();

    void setDatasheet(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();

    void setTitle(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getProject() const;
    bool projectIsSet() const;
    void unsetProject();

    void setProject(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProjectName() const;
    bool projectNameIsSet() const;
    void unsetProject_name();

    void setProjectName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getTimestamp() const;
    bool timestampIsSet() const;
    void unsetTimestamp();

    void setTimestamp(const utility::datetime& value);


protected:
    int32_t m_Datasheet;
    bool m_DatasheetIsSet;
    utility::string_t m_Title;
    bool m_TitleIsSet;
    int32_t m_Project;
    bool m_ProjectIsSet;
    utility::string_t m_Project_name;
    bool m_Project_nameIsSet;
    utility::datetime m_Timestamp;
    bool m_TimestampIsSet;
};


}
}

#endif /* POWERMETER_MODEL_ScenarioAccess_H_ */

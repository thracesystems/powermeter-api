/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComputePowerConfig.h
 *
 * 
 */

#ifndef POWERMETER_MODEL_ComputePowerConfig_H_
#define POWERMETER_MODEL_ComputePowerConfig_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace powermeter {
namespace model {


/// <summary>
/// 
/// </summary>
class  ComputePowerConfig
    : public ModelBase
{
public:
    ComputePowerConfig();
    virtual ~ComputePowerConfig();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComputePowerConfig members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSourceScaling() const;
    bool sourceScalingIsSet() const;
    void unsetSource_scaling();

    void setSourceScaling(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isTechScaling() const;
    bool techScalingIsSet() const;
    void unsetTech_scaling();

    void setTechScaling(bool value);


protected:
    utility::string_t m_Source_scaling;
    bool m_Source_scalingIsSet;
    bool m_Tech_scaling;
    bool m_Tech_scalingIsSet;
};


}
}

#endif /* POWERMETER_MODEL_ComputePowerConfig_H_ */

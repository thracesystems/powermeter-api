/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComputedPowerArc.h
 *
 * 
 */

#ifndef POWERMETER_MODEL_ComputedPowerArc_H_
#define POWERMETER_MODEL_ComputedPowerArc_H_


#include "../ModelBase.h"

#include "PinEnergy.h"
#include "LeakagePower.h"
#include <vector>

namespace powermeter {
namespace model {


/// <summary>
/// 
/// </summary>
class  ComputedPowerArc
    : public ModelBase
{
public:
    ComputedPowerArc();
    virtual ~ComputedPowerArc();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComputedPowerArc members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<PinEnergy>>& getEnergy();
    bool energyIsSet() const;
    void unsetEnergy();

    void setEnergy(const std::vector<std::shared_ptr<PinEnergy>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<LeakagePower>>& getLeakage();
    bool leakageIsSet() const;
    void unsetLeakage();

    void setLeakage(const std::vector<std::shared_ptr<LeakagePower>>& value);


protected:
    std::vector<std::shared_ptr<PinEnergy>> m_Energy;
    bool m_EnergyIsSet;
    std::vector<std::shared_ptr<LeakagePower>> m_Leakage;
    bool m_LeakageIsSet;
};


}
}

#endif /* POWERMETER_MODEL_ComputedPowerArc_H_ */

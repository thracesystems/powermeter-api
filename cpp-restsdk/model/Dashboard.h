/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Dashboard.h
 *
 * 
 */

#ifndef POWERMETER_MODEL_Dashboard_H_
#define POWERMETER_MODEL_Dashboard_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace powermeter {
namespace model {


/// <summary>
/// 
/// </summary>
class  Dashboard
    : public ModelBase
{
public:
    Dashboard();
    virtual ~Dashboard();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Dashboard members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();

    void setTitle(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isRSwitch() const;
    bool rSwitchIsSet() const;
    void unsetr_switch();

    void setRSwitch(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getTimestamp() const;
    bool timestampIsSet() const;
    void unsetTimestamp();

    void setTimestamp(const utility::datetime& value);


protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Title;
    bool m_TitleIsSet;
    bool m_r_switch;
    bool m_r_switchIsSet;
    utility::datetime m_Timestamp;
    bool m_TimestampIsSet;
};


}
}

#endif /* POWERMETER_MODEL_Dashboard_H_ */

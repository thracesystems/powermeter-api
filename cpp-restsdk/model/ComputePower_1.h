/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComputePower_1.h
 *
 * 
 */

#ifndef POWERMETER_MODEL_ComputePower_1_H_
#define POWERMETER_MODEL_ComputePower_1_H_


#include "../ModelBase.h"

#include "ComputePowerWaveform.h"
#include "ComputePowerConfig.h"
#include <cpprest/details/basic_types.h>
#include "Object.h"
#include <vector>

namespace powermeter {
namespace model {


/// <summary>
/// 
/// </summary>
class  ComputePower_1
    : public ModelBase
{
public:
    ComputePower_1();
    virtual ~ComputePower_1();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComputePower_1 members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ComputePowerWaveform>>& getWaveform();
    bool waveformIsSet() const;
    void unsetWaveform();

    void setWaveform(const std::vector<std::shared_ptr<ComputePowerWaveform>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEquation() const;
    bool equationIsSet() const;
    void unsetEquation();

    void setEquation(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getParams() const;
    bool paramsIsSet() const;
    void unsetParams();

    void setParams(const std::shared_ptr<Object>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ComputePowerConfig> getConfig() const;
    bool configIsSet() const;
    void unsetConfig();

    void setConfig(const std::shared_ptr<ComputePowerConfig>& value);


protected:
    std::vector<std::shared_ptr<ComputePowerWaveform>> m_Waveform;
    bool m_WaveformIsSet;
    utility::string_t m_Equation;
    bool m_EquationIsSet;
    std::shared_ptr<Object> m_Params;
    bool m_ParamsIsSet;
    std::shared_ptr<ComputePowerConfig> m_Config;
    bool m_ConfigIsSet;
};


}
}

#endif /* POWERMETER_MODEL_ComputePower_1_H_ */

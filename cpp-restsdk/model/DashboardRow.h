/**
 * PowerMeter API
 * API
 *
 * The version of the OpenAPI document: 2021.4.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DashboardRow.h
 *
 * 
 */

#ifndef POWERMETER_MODEL_DashboardRow_H_
#define POWERMETER_MODEL_DashboardRow_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace powermeter {
namespace model {


/// <summary>
/// 
/// </summary>
class  DashboardRow
    : public ModelBase
{
public:
    DashboardRow();
    virtual ~DashboardRow();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DashboardRow members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();

    void setTitle(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getOrder() const;
    bool orderIsSet() const;
    void unsetOrder();

    void setOrder(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getField() const;
    bool fieldIsSet() const;
    void unsetField();

    void setField(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFormat() const;
    bool formatIsSet() const;
    void unsetFormat();

    void setFormat(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUnits() const;
    bool unitsIsSet() const;
    void unsetUnits();

    void setUnits(const utility::string_t& value);


protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Title;
    bool m_TitleIsSet;
    int32_t m_Order;
    bool m_OrderIsSet;
    utility::string_t m_Field;
    bool m_FieldIsSet;
    utility::string_t m_Format;
    bool m_FormatIsSet;
    utility::string_t m_Units;
    bool m_UnitsIsSet;
};


}
}

#endif /* POWERMETER_MODEL_DashboardRow_H_ */
